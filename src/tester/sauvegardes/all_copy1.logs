ok
oops
oops"
""
"oops

echo "hello world!"
echo "this is me again"
echo "and again!"
test this
and that
exit
echo hello
echo hello
echo hello
sarah
sarah
lol
test 1
test 2
test 4
test 6
test6
test7
sarah
ok
eqweqwqw
cbsdh jds|        bjcd
exit
exit
vdmh djksb|          jkds
vdmh djksb      |          jkds
"hello'ok'hello"
"hello'ok'hello"
"hello"ok"hello"
"hellook'hello"
"hellook"hello"
"
$"HOME"
echo $?
8yi jfdsv |b < CBHJB
8yi 'jfdsv '|b < CBHJB "cjb"
8yi 'jfdsv $hfd'|b < CBHJB "cjb"
yi 'jfdsv $hfd'|b < CBHJB "cjb"~
$HOME
ewqe$HOME
echo $HOME $OK
$HOME
ok$HOME
ok$HOME
$home
e$home
ok$home
ok$HOME
ok${HOME}
testing print
testing print
testing print
testing print
testing "print"
testing print
ok
ok
ok
ok
ok
ok | ls -l
>> ok | ls -l
ok | ls -l
ok | ls -l
ok | ls -l
ok | ls -l
ok | ls -l
ok | ls -l -a
ok | ls -l
ls -l
ls -l | ok
ls -l
ls -l | ok
ls -l
ls -l | ok
ls -l
ls -l
ls -l
ls -l | ok
ls -l
ls -l | ok
ls -l | ok
ls -l | o
ls -l | ok
ls -l | ok
ls -l | ok
ls -l | ok
ls - l
ls -l
ls -l
ls -l
ls -l | ok
ls -l
ls -l | ok
ls -l | ok
ls -l | ok
ls -l | ok fine >> maybe
ls -l | ok fine >> new
ok | ls -l
evk, |cjnk
ls$home
a${HOME}
a$HOME
hfe${HOME}
hfe$HOME
$HOME
${HOME}
$HOME
$HOME$PATH
$HOME $PATH
$HOME$PATH
$HOME$PATH
$HOME$PATH
$HOME$PATH
$HOME$PATH
$HOME$PATH
$HOME$PATH
$HOME$PATH
$HOME$PATH
$HOME$PATH
$HOME${PATH}
$HOME${PATH}
$HOME${PATH}
$HOME${PATH}
$HOME${PATH}
$HOME${PATH}
$HOME${PATH}
$HOME$PATH
$HOME$PATH
$HOME$PATH
$HOME$PATH
$HOME$PATH
$HOME$PATH
$HOME$PATH
$HOME$PATH
$HOME$PATH
${HOME}$PATH
${HOME}$PATH
$HOME${PATH}
$HOME${PATH}
$HOME${PATH}
$HOME${PATH}
$HOME${PATH}
$HOME${PATH}
$HOME${PATH}
$HOME${PATH}
$HOME${PATH}
$HOME${PATH}
$HOME${PATH}
$HOME${PATH}
$HOME${PATH}
$HOME${PATH}
$HOME${PATH}
$HOME${PATH}
$HOME${PATH}
$HOME${PATH}
$HOME${PATH}
$HOME${PATH}
$HOME${PATH}
$HOME${PATH}
${HOME}${PATH}
${PATH}$HOME
${PATH}$HOME
${HOME}$PATH
${HOME}$PATH
${PATH}$HOME
${PATH}$HOME
${PATH}
${PATH}$HOME
${PATH}$LANG
${PATH}${LANG}
${PATH}${LANG
$HOME${PATH
$$
home $HOME '$PATH'
$HOME "$HOME" '$HOME'
$HOME '$HOME'
$$
$$
$HOME$LANG
$HOME$LANG $SHELL$
$HOME$LANG $SHELL$$
$$
$$$
$"$"$
$"$"'$'
$"$"' $'
$$
$$ $ "$"
$$ $ "$" | ls -l
< infile cat ${HOME} | cat $PATH > outfile
< infile cat argz | cat arg2  > outfile
< infile cat argz | cat arg2  > outfile~
< infile cat argz | cat arg2  > outfile~~
< infile cat argz | cat arg2  > outfile~
< infile cat argz | cat arg2  > outfile
< infile cat argz | cat arg2  > outfile
< infile cat argz | cat arg2  > outfile
< infile cat argz | cat arg2  > out
< infile cat argz | cat arg2  > outfile
<< infile cat argz | cat arg2  > outfile
<< infile cat argz | cat arg2  >> outfile
<< infile cat argz | cat arg2  > outfile
< infile cat argz | cat arg2  > outfile
< infile cat argz | cat arg2  > outfile
< infile cat argz | cat arg2  > outfile
< infile cat argz | cat arg2  > outfile
< infile cat argz | cat arg2  > outfile
< infile cat argz | cat arg2  > outfile
< infile cat argz | cat arg2  > outfile
< infile cat argz | cat arg2  > outfile
< infile cat argz | cat arg2  > outfile
< infile cat argz | cat arg2  > outfile
< infile cat argz | cat arg2  > outfile
< infile cat argz | cat arg2  > outfile
< infile cat argz | cat arg2  > outfile
< infile cat argz | cat arg2  > outfile
< infile cmd1 arg1 | cat -e arg2 arg3 > oufile
< infile cmd1 arg1 | cat -e arg2 arg3 > oufile
< infile cmd1 arg1 | cat -e arg2 arg3 > oufile
< infile cmd1 arg1 | cat -e arg2 arg3 > oufile
exit
< infile cmd1 arg1 | cat -e arg2 arg3 > oufile
exit
< infile cmd1 arg1 | cat -e arg2 arg3 > oufile


< infile cmd -option >> some | cmd arg arg arg | smthg
cat -e Makefile | grep "minishell" | wc -l
cat -e Makefile | grep "minishell" | wc -l
cat -e Makefile | grep "minishell" | wc -l
cat -e Makefile | grep "minishell" | wc -l
cat -e ${HOME} | $?
ok"
$?
hello
hello
hello
hello
hello
hello
"hello"
"Hello"
"hello"
hello "hello" <
hello "hello" <
hello "hello" < infile
"hello"
"hello"
"hello" hello |
"hello"
hello "hello" 'hello' |
hello "hello" 'hello' |
hello "hello" 'hello' |
### PRINTING 5 TOKENS ###
token[0] content [index]   = hello  [0]
     [0] block             = 0
     [0] category          = COMMAND
     [0] type (quotes)     = WORD (UNQUOTED)

token[1] content [index]   = hello  [1]
     [1] block             = 0
     [1] category          = ARGUMENT
     [1] type (quotes)     = WORD (DOUBLE-QUOTED)

token[2] content [index]   = hello  [2]
     [2] block             = 0
     [2] category          = ARGUMENT
     [2] type (quotes)     = WORD (SINGLE-QUOTED)

token[3] content [index]   = |  [3]
     [3] block             = 0
     [3] category & type   = CONTROL OPERATOR

token[4] content [index]   = newline  [5]
     [4] block             = 1
     [4] category & type   = CONTROL OPERATOR
### 5 TOKENS PRINTED ###
hello "hello" 'hello' |
hello
			// ft_printf("     [%d] index·········= %d\n", i, tmp->index);

hello
// ft_printf("     [%d] index·········= %d\n", i, tmp->index);
// ft_printf("     [%d] index·········= %d\n", i, tmp->index);
// ft_printf("     [%d] index·········= %d\n", i, tmp->index);
// ft_printf("     [%d] index·········= %d\n", i, tmp->index);
// ft_printf("     [%d] index·········= %d\n", i, tmp->index);
// ft_printf("     [%d] index·········= %d\n", i, tmp->index);
// ft_printf("     [%d] index·········= %d\n", i, tmp->index);
// ft_printf("     [%d] index·········= %d\n", i, tmp->index);
// ft_printf("     [%d] index·········= %d\n", i, tmp->index);
// ft_printf("     [%d] index·········= %d\n", i, tmp->index);
// ft_printf("     [%d] index·········= %d\n", i, tmp->index);
// ft_printf("     [%d] index·········= %d\n", i, tmp->index);
// ft_printf | |("     [%d] index·········= %d\n", [i, tmp->index);
// ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index);
// ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index);
// ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index);
// ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index);
// ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index);
// ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index);
V// ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index);
// ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index);
// ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index);
// ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index);
// ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index);
// ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index);
// ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index);
// ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index);
// ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index);
// ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index);
// ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index);
// ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index);
// ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index);
// ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index);
// ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index);
// ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index);
V
V// ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index);
// ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index);
// ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index);
// ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index);
// ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index);
// ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index);
// ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index);
// ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index);
// ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index);
/ / ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index);
< // ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index);
< // cat -option ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index);
// ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index);
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index);
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
;
 "/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
;
 "/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
;
 "/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
HELLO
 "/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index
 "/   /" ft_printf | (
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
;
 "/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
;
    "/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
;
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
;
  /   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
;
  /   / ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
;
V "/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
;
 "/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
;
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
;
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
;
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
 "/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
 cat


;     ;
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
		if (tmp->next && tmp->next->block != tmp->block)
		{
			// ft_printf("%?32s\n", "-------------------------------------------------");
			ft_printf("\n%?32s %?32d %?32s\n", "### BLOCK", tmp->next->block, "###");
			ft_printf("%?32s", "---------
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
	ft_printf("%?34s\n", "...");
	ft_printf("%?34s %?32d %?34s %?32d %?34s\n", "And...Done!",size, "tokens divided in", blocks, "blocks printed...");
	ft_printf("%?34s\n", "...");
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
	ft_printf("%?34s\n", "...");
	ft_printf("%?34s %?32d %?34s %?32d %?34s\n", "Printing", size, "tokens divided in", blocks, "blocks...");
	ft_printf("%?34s\n", "...");
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
V
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
cat ls -l
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
ls -l -a
ls -l -a
ls -l -a
ls -l -a
ls -l -a
ls -l -a
ls -l -a
ls -l -a
ls -l -a
ls -l -a
ls -l
ls -l -a
ls l
ls -l
ls -l -a
ls -l
ls -l
ls -l -a
ls -l -a
ls -l
ls -l | cat -e ok
ls -a -e
ls -l -a
ls -l -a
ls -l -a
ls -l -a | cat -e ok
ls -l -a
ls -l -a
ls -l -a
ls -l -a
ls -l -a
ls -l -a >> ok
ls -l -a >> ok
ls -l -a >> ok
ls -l -a >> ok
ls -l -a
ls -l -a
ls -l -a
ls -l -a
ls -l -a
ls -l -a
ls -l -a
ls -l -a
ls -l -a >> cat -e
ls -l -a | cat -e infile
ls -l -a | cat -e infile
ls -l -a | cat -e infile
ls -l -a | cat -e infile
ls -l -a | cat -e infile
ls -l -a infilezzz | cat -e infile
ls -l -a infileeazezaazeazzzz | cat -e infile
ls -l -a
ls -l
ls -l -a
ls -l
ls -l
ls -l eazidnazldna
ls -l eazidnazldnaeazeazeaz
ls -l eazidnazldnaeazeazeaz
ls -l eazidnazldnaeazez
ls -l eazidnazldnae
ls -l eazidnazldnaez
ls -l eazidnazldnae
ls -l eazidnazldnae
ls -l eazidnazldnaefse
ls -l eazidnazldnaeeazeazdqqdqsd
ls -l eazidnazldnaeeazeazdqqdqsd | cat -l outfile dazedaadzdazd
ls -l eazidnazldnaeazeazeaz
ls -l eazidnazldnaeazeazeaz | vive le rock
ls -l eazidnazldnaeazeazeaz | vive le rock | do this << and that
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)

"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
dqfqdqqsdqsdqsdqsdqs
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
dazaqcdvskdvsdkvndslk | "/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
ls -l | ok fine >> maybe

"/   /" ft_printf | ( "     [%d] index·········= %d\n"|, [i, tmp->index) minishell > "/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index) minishell > "/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index) minishell > "/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index) minishell > "/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index) minishell > "/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)minishell > "/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index) minishell > "/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index) minishell > "/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)minishell > "/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index) minishell > "/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
\033[0m
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
"/   /" ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index)
cat
 cat
slfihsdl;fhsd;lihgsdiohg
"      slfihsdl;fhsd;lihgsdiohg            "
c"at"
ls -l -a ok | cat outfile
ls -l >> -a ok | cat > outfile
c"at" outfile
 cat
 cat
 cat
 cat
 cat
c"at"
">" ">"
">"">"
">>" ok
< infile "ca"t | ls
< infile "c"'a't | ls
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
<
 "in"fi'le' cat | ls
exit
<
"in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
<
 "in"fi'le' cat | ls
exit
<
"in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
< "in"fi'le' cat | ls
exit
<
 "in"fi'le' cat | ls
exit
<
"in"fi'le' cat | ls
exit
< "in"fi'le' cat | "ls
exit
< "in"fi'le' cat | "ls
exit
< "in"fi'le' cat | "ls
exit
ls -lol
< "in"fi'le' cat | "ls
ok
exit
< "in"fi'le' cat | "ls~
exit
< "in"fi'le' cat | "ls
exit
< "in"fi'le' cat | "ls
exit
< "in"fi'le' cat | "ls
exit
< "in"fi'le' cat | "ls
exit
< "in"fi'le' cat | "ls
exit
< "in"fi'le' cat | "ls
< "in"fi'le' cat | "ls
exit
< "in"fi'le' cat | "ls
exit
< "in"fi'le' cat | "ls
exit
< "in"fi'le' cat | "ls
exit
< "in"fi'le' cat | "ls
exit
< "in"fi'le' cat | "ls
exit
< "in"fi'le' cat | "ls
< "in"fi'le' cat | "ls"
exit
< "in"fi'le' cat | "ls
exit
< "in"fi'le' cat | "ls
ls -l -a
exit
< "in"fi'le' cat | "ls
exit
< "in"fi'le' cat | "ls
exit
print_token(entry.token);
[200~< "in"fi'le' cat | "ls~
< "in"fi'le' cat | "ls
< "in"fi'le' cat | "ls
exit
< "in"fi'le' cat | "ls
exit
< | comm
exit
< "in"fi'le' cat | "ls
exit
< "in"fi'le' cat | "ls
cnd jckdsb
< < dsh
exit
< infile hdf -ds << hdbc | dhcb
<< stop
ls << ok | bonjour ca va > oui
bon << ok
ok ls << youhou
<<
<< ok
<< ok
<< okqwe dasa
<< ok
<< ok
<< efsjfsdfjsdlfdgjsgjslfgjvsfg
afvsdm < okadfopedk\
dwqqwfc
dwaas
efa
lol
das
exit
ok >> bonjour | oui < non | encore << delli;itter?
> dernier
fsg > oui
< infile cmd1 | cmd2 > outfile
exit
< infile cmd1 | cmd2 > outfile
exit
< infile cmd1 | cmd2 > outfile
exit
< infile cmd1 | cmd2 > outfile
exit
ok
ok ko
ok k  |md rf
ok
ok | ok
hello
< infile cat hello | << pewpew cat > outfile >> outfile_app
hello
hello << ok
< infile cat hello | << pewpew cat > outfile >> outfile_app
hello
< infile cat hello
< infile cat hello | ok
< infile cat hello | << pewpew
< infile cat hello | << pewpew cat
< infile cat hello | << pewpew cat > outfile
< infile cat hello | << pewpew cat > outfile >>
< infile cat hello | << pewpew cat > outfile >> ok
< infile cat hello | << pewpew cat > outfile >>
< infile cat hello | << pewpew cat > outfile >> ok
< infile cat hello | << pewpew cat > outfile
< infile cat hello | << pewpew cat > outfile >> outfile_app
< infile cat hello | << pewpew cat > outfile >> outfile_app
< infile cat hello | << pewpew cat > outfile >> outfile_app
< infile cat hello | << pewpew cat > outfile >> outfile_app
< infile cat hello | << pewpew cat > outfile >> outfile_app
< infile cat hello | << pewpew cat > outfile >> outfile_app eazeazeazeazeazazeaz
< infile cat hello | << pewpew cat > outfile >> outfile_app
< infile cat hello | << pewpew cat > outfile >> outfile_app fzefesdfsdfsdfsdfsdf
< infile cat hello | << pewpew cat > outfile >> outfile_app aeaihazidhqidhqs
< infile cat hello | << pewpew cat > outfile >> outfile_app
< infile cat hello | << pewpew cat > outfile >> outfile_app aeaihazidhqidhqs
< infile cat hello | << pewpew cat > outfile >> outfile_app
< infile cat hello | << pewpew cat > outfile >> outfile_app
< infile cat hello | << "pewpew" cat > 'outfile' >> outfile_app
< infile cat hello | << "pewpew" cat > 'outfile' >> outfile_app

  e
< infile cat hello | << "pewpew" cat > 'outfile' >> outfile_app


< infile cat hello | << "pewpew" cat > 'outfile' >> outfile_app
< infile cat hello | << "pewpew" cat > 'outfile' >> outfile_app
< infile cat hello | << "pewpew" cat > 'outfile' >> outfile_app
Problem with indexes
Problem with indexes
Problem with indexes
< infile cat hello | << "pewpew" cat > 'outfile' >> outfile_app
< infile cat hello | << "pewpew" cat > 'outfile' >> outfile_app
< infile cat hello | << "pewpew" cat > 'outfile' >> outfile_app
< infile cat hello | << "pewpew" cat > 'outfile' >> outfile_app
V
< infile cat hello | << "pewpew" cat > 'outfile' >> outfile_app
< infile cat hello | << "pewpew" cat > 'outfile' >> outfile_app
< infile cat hello | << "pewpew" cat > 'outfile' >> outfile_app
< infile cat hello | << "pewpew" cat > 'outfile' >> outfile_app
< infile cat hello | << "pewpew" cat > 'outfile' >> outfile_app
< infile cat hello | << "pewpew" cat > 'outfile' >> outfile_app
ok
hello
-----------
-----------
	ft_printf("%?35s\n", "...");

	ft_printf("%?35s\n", "...");

bsd fhd > chdbsa << lbcd

ls -l -a | ok << stop
ls -l -a | << stop grep out
ls -l -a | << stop grep out
ls -l -a | << stop grep out


exit
ls -l | cat << | grep file
ls -l | cat << | grep file
$?
ls -l | cat << | grep file
echo $?
ls -l | cat << | grep file
exit
exit
exit
exit
exit
exit
exit
< infile cat hello | << pewpew cat > outfile >> outfile_app aeaihazidhqidhqs

< infile cat hello | << pewpew cat > outfile >> outfile_app aeaihazidhqidhqs

< infile cat hello | << pewpew cat > outfile >> outfile_app aeaihazidhqidhqs

< Makefile cat
< Makefile cat
< Makefile cat
< Makefile cat
< Makefile cat
< Makefile cat
< Makefile cat
< Makefile cat
< Makefile cat
< Makefile cat
< Makefile cat
< Makefile cat
< Makefile cat
exit
< Makefile cat
< Makefile cat
ok hello nope
< Makefile cat
ok hello nope
< Makefile cat
< Makefile cat
< Makefile cat
< Makefile cat
< Makefile cat
exit
< Makefile cat
echo ok fine
echo ok
echo ok
echo ok
echo ok
echo ok
echo ok
echo ok > outfile
< infile echo ok > outfile
< infile echo ok > outfile | bonjourno cat << delimiter
< infile echo ok > outfile | bonjourno cat << delimiter
< infile echo ok > outfile | bonjourno cat << delimiter
< infile echo ok > outfile | bonjourno cat << delimiter
< infile echo ok > outfile | bonjourno cat << delimiter
< infile echo ok > outfile | bonjourno cat << delimiter
< infile echo ok > outfile | bonjourno cat << delimiter
< infile echo ok > outfile | bonjourno cat << delimiter
< infile echo ok > outfile | bonjourno cat << delimiter
< infile echo ok > outfile | bonjourno cat << delimiter
< infile echo ok > outfile | bonjourno cat << delimiter
< infile echo ok > outfile | bonjourno cat << delimiter
< infile echo ok > outfile | bonjourno cat << delimiter
< infile echo ok > outfile | bonjourno cat << delimiter
< infile echo ok > outfile | bonjourno cat << delimiter
< infile echo ok > outfile | bonjourno cat << delimiter
< infile echo ok > outfile | bonjourno cat << delimiter
< infile echo ok > outfile | bonjourno cat << delimiter
< infile echo ok > outfile | bonjourno cat << delimiter
hello ok ok ok | encore ok
< infile echo ok > outfile | bonjourno cat << delimiter
< infile cmd -option >> some | cmd arg arg arg | smthg~
V// ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index);
V// ft_printf | ("     [%d] index·········= %d\n"|, [i, tmp->index);ls -l eazidnazldnaeazeazeaz | vive le rock | do this << and that
ls -l eazidnazldnaeazeazeaz | vive le rock | do this << and that
	ft_printf("block = %d\nelems = %d\n", block, elems);

ls -l eazidnazldnaeazeazeaz | vive le rock | do this << and that
ls -l eazidnazldnaeazeazeaz | vive le rock | do this << and that
ls -l eazidnazldnaeazeazeaz | vive le rock | do this << and that
ls -l eazidnazldnaeazeazeaz | vive le rock | do this << and that
exit
ls -l eazidnazldnaeazeazeaz | vive le rock | do this << and that
ls -l eazidnazldnaeazeazeaz | vive le rock | do this << and that
ls -l eazidnazldnaeazeazeaz | vive le rock | do this << and that
ls -l eazidnazldnaeazeazeaz | vive le rock | do this << and that
ls -l eazidnazldnaeazeazeaz | vive le rock | do this << and that
ls -l eazidnazldnaeazeazeaz | vive le rock | do this << and that
ls -l eazidnazldnaeazeazeaz | vive le rock | do this << and that
ls -l eazidnazldnaeazeazeaz | vive le rock | do this << and that
ls -l eazidnazldnaeazeazeaz | vive le rock | do this << and that
ls -l eazidnazldnaeazeazeaz | vive le rock | do this << and that
ls -l eazidnazldnaeazeazeaz | vive le rock | do this << and that
ls -l eazidnazldnaeazeazeaz | vive le rock | do this << and that
ls -l eazidnazldnaeazeazeaz | vive le rock | do this << and that
ls -l eazidnazldnaeazeazeaz | vive le rock | do this << and that
ls -l eazidnazldnaeazeazeaz | vive le rock | do this << and that
ls -l eazidnazldnaeazeazeaz | vive le rock | do this << and that
void	upd_token_heads(t_token *token)
ls -l eazidnazldnaeazeazeaz | vive le rock | do this << and that
	ft_printf("token->content = %s\ntoken->head->content = %s\n", entry->token->content, entry->token->head->content);

< Makefie < infile cat
void	init_pipe(t_token **token, int *pipe_fd)

[200~ls -l eazidnazldnaeazeazeaz | vive le rock | do this << and that~
ls -l eazidnazldnaeazeazeaz | vive le rock | do this << and that
ls -l eazidnazldnaeazeazeaz | vive le rock | do this << and that
ls -l eazidnazldnaeazeazeaz | vive le rock | do this << and that
ls -l eazidnazldnaeazeazeaz | vive le rock | do this << and that >> app
ls -l eazidnazldnaeazeazeaz | vive le rock | < infile do this << and that >> app > outfile
< infile cat >> ok > infile2
< infile cat > ok > infile2
ok
ok
cat bonjour > ok | oui >> non
ok bonjour
ok bonjour | oui et non
bonjour ok > ici | hop >> par_la
bonjour ok > ici | hop >> par_la
bonjour ok > ici | hop >> par_la encore
bonjour ok > ici | hop >> par_la
bonjour ok > ici << tac < toc_pof | hop >> par_la encore ici
bonjour ok > ici | hop >> par_la
bonjour ok > ici | hop >> par_la
bonjour ok > ici | hop >> par_la
bonjour ok > ici | hop >> par_la encore
bonjour ok > ici | hop >> par_la encore
bonjour ok > ici | hop >> par_la encore
bonjour ok > ici | hop >> par_la encore
bonjour ok > ici | hop >> par_la encore
		ft_printf("here, tmp_bis = %s\n", tmp_bis->content);

bonjour ok > ici | hop >> par_la encore
bonjour ok > ici | hop >> par_la encore
bonjour ok > ici | hop >> par_la encore
bonjour ok > ici | hop >> par_la encore
bonjour ok > ici | hop >> par_la encore
bonjour ok > ici | hop >> par_la encore | cat < encore >> un << test > trop_genial
bonjour ok > ici | hop >> par_la encore | cat < encore >> un << test > trop_genial | infinite pipes
ok bonjour > truc ici < la >> ok << bofok bonjour > truc ici < la >> ok << bof << nouveau_delimiter
ok bonjour > truc ici < la >> ok << bof| zbim << nouveau_delimiterV
bonjour ok > ici | hop >> par_la encore | cat < encore >> un << test > trop_genial | infinite pipes4
\033bonjour ok > ici | hop >> par_la encore | cat < encore >> un << test > trop_genial | infinite pipes
- pipe activated bonjour ok > ici | hop >> par_la encore | cat < encore >> un << test > trop_genial | infinite pipes
(%d, %d)
pipe activated bonjour ok > ici | hop >> par_la encore | cat < encore >> un << test > trop_genial | infinite pipes
  • cmd[0] = infinite
%d
ok
ok
another one for the road
  •
ls -l | grep minishell > outfile
cat "" -e
<< $HOME | < $HOME > $HOME
<< $HOME | < $HOME > $HOME
hello
< hello
> hello
> hello
< hello
< hello
< hello ok ok
< hello ok
< hello
< hello
< hello
<< $HOME | < $HOME > $HOME
<< $HOME | < $HOME > $HOME
cur->prev
[200~<< $HOME | < $HOME > $HOME^C~
<< $HOME | < $HOME > $HOME^C
<< $HOME | < $HOME > $HOME^C
<< $HOME | < $HOME > $HOME^C
<< $HOME | < $HOME > $HOME^C
<< $HOME | < $HOME > $HOME^C
<< $HOME | < $HOME > $HOME^C
<< $HOME | < $HOME > $HOME^C
<< $HOME | < $HOME > $HOME^C
cur->prev && (ft_strcmp(cur->prev->content, "<<") != 0))
[200~<< $HOME | < $HOME > $HOME~
<< $HOME | < $HOME > $HOME
<< $HOME | < $HOME > $HOME
<< $HOME | < $HOME > $HOME
[200~if ((cur->prev && (ft_strcmp(cur->prev->content, "<<") != 0)))
{
ft_printf("cur->prev = %s\n", cur->prev->content);
expand_token(entry, cur, env);

<< $HOME | < $HOME > $HOME
<< $HOME | < $HOME > $HOME
$HOME | < $HOME > $HOME
<< $HOME | < $HOME > $HOME
$HOME | < $HOME > $HOME
$HOME | < $HOME > $HOME
<< $HOME | < $HOME > $HOME
< infile cat > outfile1 > outfile2 | ok
make re
exit
ls
exit
ls
ls -l
ls -l -a
cat
cat
cat infile2
cat infile2 -e
ok bonjour
ok bonjour >>  coucou << infile
cat << infile >> outfile >> ls << re
ls
exit
ls
< Makefile cat
cat infile
< infile cat > outfile
cat hello
ls -l
cat hello -e
cat infile2
cat infile
cat -e Makefile | grep "minishell" | wc -l
exit
